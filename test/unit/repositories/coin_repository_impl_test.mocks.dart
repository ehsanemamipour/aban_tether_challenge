// Mocks generated by Mockito 5.4.5 from annotations
// in aban_tether_challenge/test/unit/repositories/coin_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:aban_tether_challenge/core/utils/network_utils.dart' as _i6;
import 'package:aban_tether_challenge/features/coin/data/datasource/coin_remote_datasource.dart'
    as _i2;
import 'package:aban_tether_challenge/features/coin/data/models/coin_model.dart'
    as _i4;
import 'package:aban_tether_challenge/features/coin/data/models/favorite_coin_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CoinRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinRemoteDataSource extends _i1.Mock
    implements _i2.CoinRemoteDataSource {
  MockCoinRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CoinModel>> getCoinList() =>
      (super.noSuchMethod(
            Invocation.method(#getCoinList, []),
            returnValue: _i3.Future<List<_i4.CoinModel>>.value(
              <_i4.CoinModel>[],
            ),
          )
          as _i3.Future<List<_i4.CoinModel>>);

  @override
  _i3.Future<List<_i5.FavoriteCoinModel>> getFavoriteCoinList() =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteCoinList, []),
            returnValue: _i3.Future<List<_i5.FavoriteCoinModel>>.value(
              <_i5.FavoriteCoinModel>[],
            ),
          )
          as _i3.Future<List<_i5.FavoriteCoinModel>>);

  @override
  _i3.Future<void> addCoinToFavorite(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#addCoinToFavorite, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteCoinFromFavorite(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCoinFromFavorite, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get hasConnection =>
      (super.noSuchMethod(
            Invocation.getter(#hasConnection),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
